[user]
	email = oren@desk.com
	name = Oren Dobzinski
[color]
	status = auto
	diff = auto
	branch = auto
[alias]
	st = status
	co = checkout
	ci = commit
	br = branch
	cp = cherry-pick
	dt = difftool
	mt = mergetool
	rso = remote show origin
	ll = log --pretty=format:'%C(cyan)%h %C(red)%an %Cgreen%s%Creset %ar' --abbrev-commit -n15
	pp = !git down && git push
	pull-ff = pull --ff-only

	down = !sh -c 'CURRENT=$(git rev-parse --abbrev-ref HEAD) \
    && (git pull --ff-only || (git fetch origin && git rebase --preserve-merges origin/$CURRENT))'

	bugfix-startpoint = "!f() { if [ $# -lt 2 ]; then echo 'usage: git bugfix-startpoint <branch> <branch> ...' >&2; exit 1; fi; git merge-base --octopus --all $@;  }; f"

	publish = "!f() { if [ $# -ne 1 ]; then echo 'usage: git publish <local-branch-name>' >&2; exit 1; fi; git push --set-upstream origin $1:$1; }; f"

	unpublish = "!f() { if [ $# -ne 1 ]; then echo 'usage: git unpublish <remote-branch-name>' >&2; exit 1; fi; git push origin :$1; }; f"

	edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; gvim `f`"
	add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"

	diff-branch = diff develop...

	chg = whatchanged -p --abbrev-commit --pretty=medium
	g = grep --line-number --color=auto

	# Fancy logging.
	#   h = head
	#   hp = head with patch
	#   r = recent commits, only current branch
	#   ra = recent commits, all reachable refs
	#   l = all commits, only current branch
	#   la = all commits, all reachable refs
	head = !git l -1
	h = !git head
	hp = "!source ~/.githelpers && show_git_head"
	r = !git l -30
	ra = !git r --all
	l = "!source ~/.githelpers && pretty_git_log"
	la = !git l --all
	lol = log --pretty=oneline --abbrev-commit --graph --decorate
	lld = !git ll develop..
        rec = !git for-each-ref --sort='-authordate:relative' --format='%(color:red)%(objectname:short) %(color:white)- %(color:yellow)(%(refname:short)) %(color:white)%(subject) %(color:green)(%(authordate:relative)) %(color:bold blue)<%(authorname)>' refs/heads | less -R

[diff]
	tool = diffmerge
[merge]
	 tool = diffmerge
[difftool "diffmerge"]
	cmd = diffmerge $LOCAL $REMOTE
[mergetool "diffmerge"]
	 cmd = diffmerge --merge --result=$MERGED $LOCAL $BASE $REMOTE
[mergetool]
	 keepBackup = false
[branch]
	autosetuprebase = never
[remote "origin"]
	push = HEAD
[giggle]
	main-window-maximized = false
	main-window-geometry = 1540x917+90+63
	file-view-vpane-position = 590
	file-view-hpane-position = 342
	history-view-vpane-position = 591
	main-window-view = FileView
[core]
    excludesfile = "/Users/orend/.gitignore"
	editor = subl -w
[rerere]
	enabled = 1
[push]
	default = tracking
